"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/signin/page",{

/***/ "(app-pages-browser)/./redux/features/posts/postsSlice.ts":
/*!********************************************!*\
  !*** ./redux/features/posts/postsSlice.ts ***!
  \********************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   fetchPosts: function() { return /* binding */ fetchPosts; },\n/* harmony export */   toggleAuth: function() { return /* binding */ toggleAuth; }\n/* harmony export */ });\n/* harmony import */ var _reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @reduxjs/toolkit */ \"(app-pages-browser)/./node_modules/@reduxjs/toolkit/dist/redux-toolkit.modern.mjs\");\n\nconst fetchPosts = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0__.createAsyncThunk)(\"posts/fetchPosts\", async ()=>{\n    const response = await fetch(\"https://api.nasa.gov/neo/rest/v1/feed?start_date=2023-09-07&end_date=2023-09-08&api_key=a1ihh4BLJWaSwt11csJ3TMSWdLUcJVcuKtIwRskQ\");\n    const data = await response.json();\n    return data;\n});\nconst initialState = {\n    isAuth: false,\n    posts: {},\n    status: \"idle\",\n    error: null\n};\nconst postsSlice = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0__.createSlice)({\n    name: \"posts\",\n    initialState,\n    reducers: {\n        toggleAuth: (state)=>{\n            state.isAuth = !state.isAuth;\n        }\n    },\n    extraReducers: (builder)=>{\n        builder.addCase(fetchPosts.pending, (state)=>{\n            state.status = \"idle\";\n        });\n        builder.addCase(fetchPosts.fulfilled, (state, param)=>{\n            let { payload } = param;\n            state.status = \"succeeded\";\n            state.posts = payload.map((e)=>{});\n        });\n        builder.addCase(fetchPosts.rejected, (state, action)=>{\n            if (action.payload) {\n                state.status = \"failed\";\n                state.error = \"Error occurred: \" + action.payload;\n            } else {\n                state.status = \"failed\";\n                state.error = \"Unknown error occurred\";\n            }\n        });\n    }\n});\nconst { toggleAuth } = postsSlice.actions;\n/* harmony default export */ __webpack_exports__[\"default\"] = (postsSlice.reducer);\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3JlZHV4L2ZlYXR1cmVzL3Bvc3RzL3Bvc3RzU2xpY2UudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQWdGO0FBY3pFLE1BQU1FLGFBQWFELGtFQUFnQkEsQ0FDeEMsb0JBQ0E7SUFDRSxNQUFNRSxXQUFXLE1BQU1DLE1BQU07SUFDN0IsTUFBTUMsT0FBTyxNQUFNRixTQUFTRyxJQUFJO0lBQ2hDLE9BQU9EO0FBQ1QsR0FDQTtBQUVGLE1BQU1FLGVBQTJCO0lBQy9CQyxRQUFRO0lBQ1JDLE9BQU8sQ0FBQztJQUNSQyxRQUFRO0lBQ1JDLE9BQU87QUFDVDtBQUVBLE1BQU1DLGFBQWFaLDZEQUFXQSxDQUFDO0lBQzdCYSxNQUFNO0lBQ05OO0lBQ0FPLFVBQVU7UUFDUkMsWUFBWSxDQUFDQztZQUNYQSxNQUFNUixNQUFNLEdBQUcsQ0FBQ1EsTUFBTVIsTUFBTTtRQUM5QjtJQUNGO0lBQ0FTLGVBQWUsQ0FBQ0M7UUFDZEEsUUFBUUMsT0FBTyxDQUFDakIsV0FBV2tCLE9BQU8sRUFBRSxDQUFDSjtZQUNuQ0EsTUFBTU4sTUFBTSxHQUFHO1FBQ2pCO1FBQ0FRLFFBQVFDLE9BQU8sQ0FBQ2pCLFdBQVdtQixTQUFTLEVBQUUsQ0FBQ0w7Z0JBQU8sRUFBRU0sT0FBTyxFQUFFO1lBQ3ZETixNQUFNTixNQUFNLEdBQUc7WUFDZk0sTUFBTVAsS0FBSyxHQUFHYSxRQUFRQyxHQUFHLENBQUVDLENBQUFBLEtBRTNCO1FBQ0Y7UUFDQU4sUUFBUUMsT0FBTyxDQUFDakIsV0FBV3VCLFFBQVEsRUFBRSxDQUFDVCxPQUFPVTtZQUN6QyxJQUFJQSxPQUFPSixPQUFPLEVBQUU7Z0JBQ2xCTixNQUFNTixNQUFNLEdBQUc7Z0JBQ2ZNLE1BQU1MLEtBQUssR0FBRyxxQkFBcUJlLE9BQU9KLE9BQU87WUFDbkQsT0FBTztnQkFDTE4sTUFBTU4sTUFBTSxHQUFHO2dCQUNmTSxNQUFNTCxLQUFLLEdBQUc7WUFDaEI7UUFDRjtJQUNKO0FBQ0Y7QUFFTyxNQUFNLEVBQUVJLFVBQVUsRUFBRSxHQUFHSCxXQUFXZSxPQUFPLENBQUM7QUFDakQsK0RBQWVmLFdBQVdnQixPQUFPLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vcmVkdXgvZmVhdHVyZXMvcG9zdHMvcG9zdHNTbGljZS50cz8wMmVmIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNyZWF0ZVNsaWNlLCBjcmVhdGVBc3luY1RodW5rLCBQYXlsb2FkQWN0aW9uIH0gZnJvbSBcIkByZWR1eGpzL3Rvb2xraXRcIjtcclxuXHJcbmludGVyZmFjZSBBcGlSZXNwb25zZSB7XHJcbiAgICBsaW5rczogUmVjb3JkPHN0cmluZywgdW5rbm93bj47XHJcbiAgICBwYWdlOiBSZWNvcmQ8c3RyaW5nLCB1bmtub3duPjtcclxuICAgIG5lYXJfZWFydGhfb2JqZWN0czoge25hbWU6IHN0cmluZ31bXTtcclxuICB9XHJcbmludGVyZmFjZSBQb3N0c1N0YXRlIHtcclxuICBpc0F1dGg6IGJvb2xlYW47XHJcbiAgcG9zdHM6IEFwaVJlc3BvbnNlO1xyXG4gIHN0YXR1czogJ2lkbGUnIHwgJ3N1Y2NlZWRlZCcgfCAnZmFpbGVkJztcclxuICBlcnJvcjogc3RyaW5nIHwgbnVsbDtcclxufVxyXG5cclxuZXhwb3J0IGNvbnN0IGZldGNoUG9zdHMgPSBjcmVhdGVBc3luY1RodW5rPEFwaVJlc3BvbnNlPihcclxuICAncG9zdHMvZmV0Y2hQb3N0cycsXHJcbiAgYXN5bmMgKCkgPT4ge1xyXG4gICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaCgnaHR0cHM6Ly9hcGkubmFzYS5nb3YvbmVvL3Jlc3QvdjEvZmVlZD9zdGFydF9kYXRlPTIwMjMtMDktMDcmZW5kX2RhdGU9MjAyMy0wOS0wOCZhcGlfa2V5PWExaWhoNEJMSldhU3d0MTFjc0ozVE1TV2RMVWNKVmN1S3RJd1Jza1EnKTtcclxuICAgIGNvbnN0IGRhdGEgPSBhd2FpdCByZXNwb25zZS5qc29uKCk7XHJcbiAgICByZXR1cm4gZGF0YSBhcyBBcGlSZXNwb25zZTtcclxuICB9XHJcbik7XHJcblxyXG5jb25zdCBpbml0aWFsU3RhdGU6IFBvc3RzU3RhdGUgPSB7XHJcbiAgaXNBdXRoOiBmYWxzZSxcclxuICBwb3N0czoge30sXHJcbiAgc3RhdHVzOiAnaWRsZScsXHJcbiAgZXJyb3I6IG51bGwsXHJcbn07XHJcblxyXG5jb25zdCBwb3N0c1NsaWNlID0gY3JlYXRlU2xpY2Uoe1xyXG4gIG5hbWU6ICdwb3N0cycsXHJcbiAgaW5pdGlhbFN0YXRlLFxyXG4gIHJlZHVjZXJzOiB7XHJcbiAgICB0b2dnbGVBdXRoOiAoc3RhdGUpID0+IHtcclxuICAgICAgc3RhdGUuaXNBdXRoID0gIXN0YXRlLmlzQXV0aDtcclxuICAgIH0sXHJcbiAgfSxcclxuICBleHRyYVJlZHVjZXJzOiAoYnVpbGRlcikgPT4ge1xyXG4gICAgYnVpbGRlci5hZGRDYXNlKGZldGNoUG9zdHMucGVuZGluZywgKHN0YXRlKSA9PiB7XHJcbiAgICAgIHN0YXRlLnN0YXR1cyA9ICdpZGxlJztcclxuICAgIH0pO1xyXG4gICAgYnVpbGRlci5hZGRDYXNlKGZldGNoUG9zdHMuZnVsZmlsbGVkLCAoc3RhdGUsIHsgcGF5bG9hZCB9KSA9PiB7XHJcbiAgICAgIHN0YXRlLnN0YXR1cyA9ICdzdWNjZWVkZWQnO1xyXG4gICAgICBzdGF0ZS5wb3N0cyA9IHBheWxvYWQubWFwKCBlID0+IHtcclxuICAgICAgICBcclxuICAgICAgfSk7XHJcbiAgICB9KTtcclxuICAgIGJ1aWxkZXIuYWRkQ2FzZShmZXRjaFBvc3RzLnJlamVjdGVkLCAoc3RhdGUsIGFjdGlvbikgPT4ge1xyXG4gICAgICAgIGlmIChhY3Rpb24ucGF5bG9hZCkge1xyXG4gICAgICAgICAgc3RhdGUuc3RhdHVzID0gJ2ZhaWxlZCc7XHJcbiAgICAgICAgICBzdGF0ZS5lcnJvciA9ICdFcnJvciBvY2N1cnJlZDogJyArIGFjdGlvbi5wYXlsb2FkOyBcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgc3RhdGUuc3RhdHVzID0gJ2ZhaWxlZCc7XHJcbiAgICAgICAgICBzdGF0ZS5lcnJvciA9ICdVbmtub3duIGVycm9yIG9jY3VycmVkJztcclxuICAgICAgICB9XHJcbiAgICAgIH0pO1xyXG4gIH0sXHJcbn0pO1xyXG5cclxuZXhwb3J0IGNvbnN0IHsgdG9nZ2xlQXV0aCB9ID0gcG9zdHNTbGljZS5hY3Rpb25zO1xyXG5leHBvcnQgZGVmYXVsdCBwb3N0c1NsaWNlLnJlZHVjZXI7Il0sIm5hbWVzIjpbImNyZWF0ZVNsaWNlIiwiY3JlYXRlQXN5bmNUaHVuayIsImZldGNoUG9zdHMiLCJyZXNwb25zZSIsImZldGNoIiwiZGF0YSIsImpzb24iLCJpbml0aWFsU3RhdGUiLCJpc0F1dGgiLCJwb3N0cyIsInN0YXR1cyIsImVycm9yIiwicG9zdHNTbGljZSIsIm5hbWUiLCJyZWR1Y2VycyIsInRvZ2dsZUF1dGgiLCJzdGF0ZSIsImV4dHJhUmVkdWNlcnMiLCJidWlsZGVyIiwiYWRkQ2FzZSIsInBlbmRpbmciLCJmdWxmaWxsZWQiLCJwYXlsb2FkIiwibWFwIiwiZSIsInJlamVjdGVkIiwiYWN0aW9uIiwiYWN0aW9ucyIsInJlZHVjZXIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./redux/features/posts/postsSlice.ts\n"));

/***/ })

});